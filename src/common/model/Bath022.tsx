/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/assets/models/Bath022.glb -o src/common/model/Bath022.tsx -r public 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    bath02: THREE.Mesh
    floor02: THREE.Mesh
    wall: THREE.Mesh
    wall001: THREE.Mesh
    Untitled004: THREE.Mesh
    wall002: THREE.Mesh
    Untitled005: THREE.Mesh
    chair01001: THREE.Mesh
    Untitled007: THREE.Mesh
    Cube003: THREE.Mesh
    Untitled008: THREE.Mesh
    chair01: THREE.Mesh
    bath01001: THREE.Mesh
    bath01: THREE.Mesh
    Cube004: THREE.Mesh
    Untitled003: THREE.Mesh
    Untitled011: THREE.Mesh
    floor01: THREE.Mesh
    Untitled013: THREE.Mesh
    chair03: THREE.Mesh
    door01: THREE.Mesh
    scale: THREE.Mesh
    Untitled017: THREE.Mesh
    Cube005: THREE.Mesh
    door01001: THREE.Mesh
    Untitled019: THREE.Mesh
  }
  materials: {
    ['palette.002']: THREE.MeshStandardMaterial
    floor: THREE.MeshStandardMaterial
    wall: THREE.MeshStandardMaterial
    ['palette.006']: THREE.MeshStandardMaterial
    ['palette.008']: THREE.MeshStandardMaterial
    ['palette.006']: THREE.MeshStandardMaterial
    ['palette.009']: THREE.MeshStandardMaterial
    ['palette.010']: THREE.MeshStandardMaterial
    ['palette.012']: THREE.MeshStandardMaterial
    palette: THREE.MeshStandardMaterial
    ['palette.001']: THREE.MeshStandardMaterial
    ['palette.003']: THREE.MeshStandardMaterial
    ['palette.004']: THREE.MeshStandardMaterial
    ['palette.005']: THREE.MeshStandardMaterial
    ['palette.007']: THREE.MeshStandardMaterial
    ['palette.011']: THREE.MeshStandardMaterial
  }
  animations: any[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/assets/models/Bath022.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.bath02.geometry} material={materials['palette.002']} position={[3.031, 0.107, -1.673]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.floor02.geometry} material={materials.floor} position={[-0.855, 0.003, 4.297]} />
      <mesh geometry={nodes.wall.geometry} material={materials.wall} position={[-0.101, 0.795, 1.399]} rotation={[0, Math.PI / 2, 0]} scale={[0.095, 0.678, 1]} />
      <mesh geometry={nodes.wall001.geometry} material={materials.wall} position={[-0.333, 1.104, -3.108]} rotation={[0, Math.PI / 2, 0]} scale={[0.095, 1, 1]} />
      <mesh geometry={nodes.Untitled004.geometry} material={materials['palette.006']} position={[-0.486, 0.569, 1.993]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.wall002.geometry} material={materials.wall} position={[-0.165, 0.781, 4.68]} rotation={[0, Math.PI / 2, 0]} scale={[0.095, 0.678, 1]} />
      <mesh geometry={nodes.Untitled005.geometry} material={materials['palette.006']} position={[3.012, 0.569, 4.084]} rotation={[Math.PI / 2, 0, Math.PI]} />
      <mesh geometry={nodes.chair01001.geometry} material={materials['palette.008']} position={[-0.914, 0, 1.692]} />
      <mesh geometry={nodes.Untitled007.geometry} material={materials['palette.006']} position={[-0.376, 1.132, -2.549]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Cube003.geometry} material={materials.wall} position={[0.398, 0.795, -0.189]} rotation={[Math.PI, 0, Math.PI]} scale={[0.095, 0.678, 1]} />
      <mesh geometry={nodes.Untitled008.geometry} material={materials['palette.008']} position={[-0.914, 0, 3.126]} />
      <mesh geometry={nodes.chair01.geometry} material={materials['palette.009']} position={[-0.084, 0, 1.692]} />
      <mesh geometry={nodes.bath01001.geometry} material={materials['palette.010']} position={[6.25, 0.118, 1.95]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.bath01.geometry} material={materials['palette.010']} position={[6.23, 0.118, 3.656]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Cube004.geometry} material={materials.wall} position={[-1.261, 1.094, 3.684]} rotation={[Math.PI, 0, Math.PI]} scale={[0.095, 0.678, 1]} />
      <mesh geometry={nodes.Untitled003.geometry} material={materials['palette.012']} position={[-1.215, 0.102, -1.007]} rotation={[Math.PI / 2, 0, 0]} scale={[0.673, 1, 1]} />
      <mesh geometry={nodes.Untitled011.geometry} material={materials.palette} position={[0.21, 0, 1.532]} />
      <mesh geometry={nodes.floor01.geometry} material={materials['palette.001']} position={[-6.853, 0.053, 1.293]} />
      <mesh geometry={nodes.Untitled013.geometry} material={materials.palette} position={[3.353, 0, -0.662]} />
      <mesh geometry={nodes.chair03.geometry} material={materials['palette.003']} position={[-4.415, 0.094, -1.952]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.door01.geometry} material={materials['palette.004']} position={[-2.156, 1.077, -4.958]} />
      <mesh geometry={nodes.scale.geometry} material={materials['palette.005']} position={[-1.773, 0.792, -3.199]} />
      <mesh geometry={nodes.Untitled017.geometry} material={materials['palette.007']} position={[-2.622, 0.928, 0.979]} rotation={[Math.PI, 0, Math.PI]} />
      <mesh geometry={nodes.Cube005.geometry} material={materials.wall} position={[-2.442, 1.094, 1.677]} rotation={[0, -1.571, 0]} scale={[0.095, 0.678, 1]} />
      <mesh geometry={nodes.door01001.geometry} material={materials['palette.004']} position={[7.592, 1.077, -0.27]} rotation={[0, Math.PI / 2, 0]} />
      <mesh geometry={nodes.Untitled019.geometry} material={materials['palette.011']} position={[-7.306, 1.173, -3.488]} rotation={[Math.PI / 2, 0, 0]} scale={[0.5, 1, 1]} />
    </group>
  )
}

useGLTF.preload('/assets/models/Bath022.glb')
